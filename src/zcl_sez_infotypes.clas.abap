CLASS ZCL_SEZ_INFOTYPES DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
  INTERFACES if_amdp_marker_hdb .

  CLASS-METHODS READ_HRPOSITION
  FOR TABLE FUNCTION ZSEZ_TF_HRPOSITION.

  CLASS-METHODS READ_ORGUNIT
  FOR TABLE FUNCTION ZSEZ_TF_ORGUNIT.

  CLASS-METHODS READ_CSKS
  FOR TABLE FUNCTION ZSEZ_TF_COSTCENTER.

  CLASS-METHODS READ_HRP1001
  FOR TABLE FUNCTION ZSEZ_TF_HRP1001.

  CLASS-METHODS READ_HRP1001_ORG
  FOR TABLE FUNCTION ZSEZ_TF_ORG_STRUCT.

  CLASS-METHODS READ_HRP1001_ORG_CUR
  FOR TABLE FUNCTION ZSEZ_TF_ORG_STRUCT_CUR.

  CLASS-METHODS GET_N_PLUS_ONE_FROM_ORGSTRUCT
  FOR TABLE FUNCTION ZSEZ_TF_EMPL_N_PLUS_ONE.

  CLASS-METHODS READ_HR002
  FOR TABLE FUNCTION ZSEZ_TF_HR002.

  CLASS-METHODS READ_HR9007
  FOR TABLE FUNCTION ZSEZ_TF_HR9007.

  CLASS-METHODS READ_HR001
  FOR TABLE FUNCTION ZSEZ_TF_HR001.

  CLASS-METHODS READ_HR105
  FOR TABLE FUNCTION ZSEZ_TF_HR105.

  CLASS-METHODS READ_HR105_GDFS
  FOR TABLE FUNCTION ZSEZ_TF_HR105_GDFS.

  CLASS-METHODS READ_HR000
  FOR TABLE FUNCTION ZSEZ_TF_HR000.

  CLASS-METHODS READ_HR041
  FOR TABLE FUNCTION ZSEZ_TF_HR041.

  CLASS-METHODS READ_HR016
  FOR TABLE FUNCTION ZSEZ_TF_HR016.

  CLASS-METHODS READ_HR007
  FOR TABLE FUNCTION ZSEZ_TF_HR007.

  CLASS-METHODS READ_HR032
  FOR TABLE FUNCTION ZSEZ_TF_HR032.

  CLASS-METHODS READ_HR315
  FOR TABLE FUNCTION ZSEZ_TF_HR315.

  CLASS-METHODS READ_HR006
  FOR TABLE FUNCTION ZSEZ_TF_HR006.

  CLASS-METHODS READ_HR9351
  FOR TABLE FUNCTION ZSEZ_TF_HR9351.

  CLASS-METHODS READ_HR008
  FOR TABLE FUNCTION ZSEZ_TF_HR008.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS ZCL_SEZ_INFOTYPES IMPLEMENTATION.
METHOD READ_HRPOSITION
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING HRP1000 ZSEZ_TF_PARAMS
.

SELECT lv_keydate into p_keydate
FROM "ZSEZ_TF_PARAMS"( :p_keydate, '*', '*', '*', '*');

cte_hr1000_s=
SELECT
MANDT
,PLVAR
,OTYPE
,OBJID AS HRPOSITION
,ISTAT
,BEGDA AS DATEFROM
,ENDDA AS DATETO
,LANGU
,SEQNR
,OTJID
,INFTY
,AEDTM AS CH_ON
,UNAME
,REASN
,HISTO
,ITXNR
,SHORT
,STEXT
,GDATE
,MC_SHORT
,MC_STEXT AS TXTMD
,MC_SEARK
FROM HRP1000 AS "HRP00"
WHERE HRP00.ENDDA >= :p_keydate and HRP00.BEGDA <= :p_keydate AND
HRP00.PLVAR = '01' AND HRP00.OTYPE = 'S' AND HRP00.ISTAT = 1 AND
( HRP00.MC_SHORT <> '' OR HRP00.MC_STEXT <> '' )
AND HRP00.MANDT = session_context('CLIENT')
;
cte_pos_prep =
SELECT DISTINCT U.MANDT, U.HRPOSITION,
CASE WHEN E.TXTMD IS NULL THEN U.TXTMD ELSE E.TXTMD END AS POSITION_TEXT,
CASE WHEN E.STEXT IS NULL THEN U.STEXT ELSE E.STEXT END AS POSITION_STEXT,
COUNT(*) AS COUNTER
,U.DATEFROM, U.DATETO
,U.INFTY
,U.CH_ON
,U.UNAME

from :cte_hr1000_s as U
LEFT OUTER JOIN :cte_hr1000_s as E
ON E.HRPOSITION = U.HRPOSITION AND E.LANGU = 'E'
GROUP BY
U.MANDT,
U.HRPOSITION,
E.TXTMD,
U.TXTMD,
E.STEXT,
U.STEXT
,U.DATEFROM, U.DATETO
,U.INFTY
,U.CH_ON
,U.UNAME

;
RETURN
SELECT DISTINCT MANDT, HRPOSITION, POSITION_TEXT AS HRPOSITION_DESC, POSITION_STEXT AS HRPOSITION_TEXT, COUNT(HRPOSITION) AS COUNTER
, DATETO,DATEFROM
,INFTY
,CH_ON
,UNAME

FROM :cte_pos_prep
WHERE POSITION_TEXT <> ''
GROUP BY MANDT, HRPOSITION, POSITION_TEXT, POSITION_STEXT,DATEFROM, DATETO
,INFTY
,CH_ON
,UNAME

ORDER BY 1
;
ENDMETHOD.

METHOD READ_ORGUNIT
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING HRP1000 HRP1001 ZSEZ_TF_COSTCENTER ZTF_SPLIT_STRG ZSEZ_TF_PARAMS
.
DECLARE bup_comp_code varchar( 1333 );

cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, '*', '*', :p_comp_code, '*');
p_keydate := ''; p_comp_code := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

--HRP00.OTYPE = 'O' OBJID is Org Unit that has MC_SHORT AS DEPARTMENT and this could be a costcenter
-- then it also has CCTR_FA a Functional Area eventually not valid because the costcenter is invalid or missing
cte_costcenter=
SELECT *
FROM "ZSEZ_TF_COSTCENTER"
(P_KEYDATE => :p_keydate , P_LANGU => 'E', P_CO_AREA => 'TE01', P_COMP_CODE => :p_comp_code )
;

-- -HRP00.OTYPE = 'O' OBJID is Org Unit that has related object SCLAS = K
-- and get it validated vs CSKS
cte_costcenter_related_orgunit=
SELECT DISTINCT
"OMO"."OBJID" AS "ORGUNIT",
SUBSTRING("OMO"."VARYF",3,10) AS COSTCENTER,
COALESCE(CC.COSTCENTER_DESC,'INVALID_CCTR')
FROM  HRP1001 AS "OMO"
LEFT OUTER JOIN :cte_costcenter AS CC ON CC.MANDT = "OMO".MANDT AND CC.COSTCENTER = SUBSTRING("OMO"."VARYF",3,10)
WHERE "OMO"."MANDT" = session_context('CLIENT')
AND "OMO"."SCLAS" = 'K' AND
      "OMO"."PLVAR" = '01' AND
      "OMO"."ISTAT" = '1' AND
      "OMO"."BEGDA" <= :p_keydate AND "OMO"."ENDDA" >= :p_keydate

;

cte_hr1000_o=
SELECT
MANDT
,PLVAR
,OTYPE
,OBJID AS ORGUNIT
,ISTAT
,BEGDA AS DATEFROM
,ENDDA AS DATETO
,LANGU
,SEQNR
,OTJID
,INFTY
,AEDTM
,UNAME
,REASN
,HISTO
,ITXNR
,SHORT
,STEXT AS ORGUNIT_DESC
,GDATE
,MC_SHORT AS DEPARTMENT
,MC_STEXT AS ORGUNIT_DESC_UPPER
,MC_SEARK
FROM HRP1000 AS "HRP00"
WHERE HRP00.ENDDA >= :p_keydate and HRP00.BEGDA <= :p_keydate AND
HRP00.PLVAR = '01' AND HRP00.OTYPE = 'O' AND HRP00.ISTAT = 1 AND
( HRP00.MC_SHORT <> '' OR HRP00.MC_STEXT <> '' )
AND HRP00.MANDT = session_context('CLIENT') AND HRP00.LANGU = 'E'
;

if :bup_comp_code = '*' then
cte_temp=
SELECT
O.MANDT
,O.ORGUNIT
,O.ORGUNIT_DESC
,O.ORGUNIT_DESC_UPPER
,O.DEPARTMENT
,CC.COMP_CODE
,OUCC.COSTCENTER AS CCTR_FROM_OU
,COSTCENTER_DESC
,COALESCE( FUNC_AREA,'NOT_A_COSTCENTER' ) AS CCTR_FA
,O.DATETO
,O.DATEFROM
,O.INFTY
,O.AEDTM AS CH_ON
,O.UNAME
FROM :cte_hr1000_o as O
left outer join :cte_costcenter_related_orgunit AS OUCC
ON O.ORGUNIT = OUCC.ORGUNIT
left outer join :cte_costcenter AS CC ON O.DEPARTMENT = CC.COSTCENTER;
else
SELECT
O.MANDT
,O.ORGUNIT
,O.ORGUNIT_DESC
,O.ORGUNIT_DESC_UPPER
,O.DEPARTMENT
,CC.COMP_CODE
,OUCC.COSTCENTER AS CCTR_FROM_OU
,COSTCENTER_DESC
,COALESCE( FUNC_AREA,'NOT_A_COSTCENTER' ) AS CCTR_FA
,O.DATETO
,O.DATEFROM
,O.INFTY
,O.AEDTM AS CH_ON
,O.UNAME
FROM :cte_hr1000_o as O
left outer join :cte_costcenter_related_orgunit AS OUCC
ON O.ORGUNIT = OUCC.ORGUNIT
left outer join :cte_costcenter AS CC ON O.DEPARTMENT = CC.COSTCENTER
WHERE CC.COMP_CODE IN (SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :p_comp_code ))
;
end if;
RETURN
SELECT * FROM :cte_temp ORDER BY 2;
ENDMETHOD.

METHOD READ_CSKS
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING CSKS CSKT TKT05 ZTF_SPLIT_STRG CEPCT TFKBT ZTP2P_OVHLINET ZSEZ_TF_PARAMS
  .
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, '*', '*', :p_comp_code, '*');
p_keydate := ''; p_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;

*FUNC_AREA_DESC note: DATAB, DATBIS and DATE_EXP not used in TFKB
cte_func_areat=
SELECT
MANDT
,SPRAS
,FKBER
,FKBTX AS FUNC_AREA_DESC
FROM TFKBT
WHERE SPRAS = 'E' AND MANDT = session_context('CLIENT')
;

*OVHLINE_DESC
cte_ovhlt=
SELECT
MANDT
,SPRAS
,OVHLINE
,SHORTTXT AS OVHLINE_DESC
,LONGTXT
FROM ZTP2P_OVHLINET
WHERE SPRAS = 'E' AND MANDT = session_context('CLIENT')
;


 cte_prctrt=
  SELECT
  MANDT
 ,SPRAS
 ,PRCTR
 ,DATBI
 ,KOKRS
 ,KTEXT
 ,LTEXT AS PROFIT_CTR_DESC
 ,MCTXT
  FROM CEPCT
  WHERE SPRAS = 'E' AND MANDT = session_context('CLIENT') AND KOKRS = :p_co_area AND DATBI >= :p_keydate
  ;

  cte_cskt=
  SELECT
  MANDT
  ,SPRAS AS LANGU
  ,KOKRS
  ,KOSTL
  ,DATBI
  ,SPRAS
  ,LTEXT
  FROM CSKT
  WHERE MANDT = session_context('CLIENT') AND KOKRS = :p_co_area AND DATBI >= :p_keydate and SPRAS = 'E'
  ;
RETURN
SELECT
C.mandt
,T.LANGU
,C.KOKRS AS CO_AREA
,C.KOSTL AS COSTCENTER
,C.DATBI AS DATETO
,C.DATAB AS DATEFROM
,BUKRS AS COMP_CODE
,OBJNR AS OBJECT_NO
,C.KOSAR AS CO_CCCAT
,CAT.KTEXT AS CO_CCCAT_TEXT
,WAERS AS OBJ_CURR
,C.PRCTR AS PROFIT_CTR
,PCT.PROFIT_CTR_DESC
,VERAK AS RESP_PERS
,khinr AS HNODE
,ZZOVHLINE AS OVHLINE
,OVT.OVHLINE_DESC
,FUNC_AREA AS FUNC_AREA
,FAT.FUNC_AREA_DESC
,ZZFKSTL AS RESP_CCTR
,verak_user AS RESP_USER
--ABTEI  :   /BIC/OIABTEI   DEPARTMENT
,land1 AS COUNTRY
,ort01 AS RT_LOCATIO
,LTEXT AS COSTCENTER_DESC
FROM CSKS AS C
LEFT OUTER JOIN TKT05 AS CAT ON CAT.MANDT = C.MANDT AND CAT.KOSAR = C.KOSAR AND CAT.SPRAS = 'E'
LEFT OUTER JOIN :cte_cskt AS T ON C.KOSTL = T.KOSTL
LEFT OUTER JOIN :cte_prctrt AS PCT ON PCT.PRCTR = C.PRCTR
LEFT OUTER JOIN :cte_ovhlt AS OVT ON OVT.OVHLINE = C.zzovhline
LEFT OUTER JOIN :cte_func_areat AS FAT ON FAT.FKBER = C.func_area
WHERE C.MANDT = session_context('CLIENT') AND C.DATBI >= :p_keydate and C.DATAB <= :p_keydate
AND T.DATBI >= :p_keydate
AND C.KOKRS = :p_co_area
AND C.BUKRS IN (SELECT distinct BASE_MEMBER AS BUKRS FROM "ZTF_SPLIT_STRG"( :p_comp_code ))
ORDER BY 4,5 DESC
;
ENDMETHOD.

METHOD READ_HRP1001
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_PARAMS ZTF_SPLIT_STRG HRP1001 ZSEZ_TF_HR002  ZSEZ_TF_HRPOSITION  ZSEZ_TF_ORGUNIT
  .
  DECLARE p_emplgrp varchar ( 1333 );
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, '*', '*', :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;
cte_orgunit=
SELECT *
FROM "ZSEZ_TF_ORGUNIT"(P_KEYDATE => :p_keydate, P_COMP_CODE => :p_comp_code)
;

cte_hrposition=
SELECT *
FROM "ZSEZ_TF_HRPOSITION"(P_KEYDATE => :p_keydate)
;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;

-- get employee position and orgunit
cte_empl_pos_org_prep=
SELECT
  DISTINCT OMS.MANDT, OMS.OBJID AS EMPLOYEE,
  OMP.OBJID AS HRPOSITION,
  OMP.SOBID AS ORGUNIT,
  OMS.BEGDA AS DATEFROM,
  OMS.ENDDA AS DATETO,
  OMS.SUBTY,
  OMS.SEQNR,
  OMS.INFTY,
  OMS.PROZT AS POSITION_WEIGHT,
  ORGT.DEPARTMENT,
  ORGT.ORGUNIT_DESC,
  ORGT.ORGUNIT_DESC_UPPER,
  POSTXT.HRPOSITION_DESC,
  POSTXT.HRPOSITION_TEXT,
  OMS.AEDTM AS CH_ON,
  OMS.UNAME
FROM HRP1001 as OMS INNER JOIN HRP1001 AS OMP ON (
      OMS.MANDT = OMP.MANDT AND
      OMS.SOBID = OMP.OBJID AND
      OMS.OTYPE = 'P' AND
      OMS.SCLAS = 'S' AND
      OMS.PLVAR = '01' AND
      OMP.PLVAR = OMS.PLVAR AND
      OMS.ISTAT = '1' AND OMP.ISTAT = '1' AND
      OMS.BEGDA <= :p_keydate and OMS.ENDDA >= :p_keydate AND
      OMP.BEGDA <= :p_keydate and OMP.ENDDA >= :p_keydate AND
      OMS.SUBTY = 'B008' AND
      OMP.SUBTY = 'A003' AND
      OMS.MANDT = session_context('CLIENT')
    )
  LEFT OUTER JOIN :cte_orgunit ORGT ON (
    ORGT.ORGUNIT = OMP.SOBID AND
    ORGT.DATETO >= :p_keydate AND
    ORGT.DATEFROM <= :p_keydate
  )
  LEFT OUTER JOIN :cte_hrposition AS POSTXT ON (
  POSTXT.HRPOSITION = OMP.OBJID AND
  POSTXT.DATETO >= :p_keydate AND
  POSTXT.DATEFROM <= :p_keydate
  )
;
-- resolve "SEQNR" with window function rank or rownumber
cte_empl_pos_org_prep_rank=
SELECT
row_number() over
(partition by HRP1001.EMPLOYEE
ORDER BY HRP1001.EMPLOYEE, HRP1001.HRPOSITION ASC) as SEQNR,
HRP1001.MANDT,
HRP1001.EMPLOYEE,
HR002.COMP_CODE,
HR002.EMPLOYEE_STATUS,
HR002.EMPLOYEE_GROUP,
HR002.LEGAL_FIRST_NAME,
HR002.LEGAL_LAST_NAME,

HRP1001.HRPOSITION,
HRP1001.HRPOSITION_DESC,
HRP1001.ORGUNIT,
HRP1001.ORGUNIT_DESC,
HRP1001.DEPARTMENT,

HRP1001.POSITION_WEIGHT,


HRP1001.DATETO,
HRP1001.DATEFROM,
HRP1001.SUBTY,
'' AS OBJPS,

HRP1001.INFTY,
HRP1001.CH_ON,
HRP1001.UNAME

FROM :cte_empl_pos_org_prep as HRP1001
LEFT OUTER JOIN :cte_hr002 AS HR002 ON HR002.EMPLOYEE = HRP1001.EMPLOYEE
;
-- hard to believe but : if :bup_comp_code <> '*'  and :bup_emplstatus <> '*' DOES NOT test properly
if :bup_comp_code <> '*' then
cte_result_1=
SELECT *
FROM :cte_empl_pos_org_prep_rank
WHERE COMP_CODE in (SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :bup_comp_code ));
END IF ;
if not :bup_emplstatus = '*' then
cte_result_2=
SELECT * FROM :cte_result_1
WHERE EMPLOYEE_STATUS in (SELECT distinct BASE_MEMBER AS EMPLOYEE_STATUS FROM "ZTF_SPLIT_STRG"( :bup_emplstatus ));
END IF ;
if not :bup_emplgrp = '*' then
cte_result_3=
SELECT * FROM :cte_result_2
WHERE EMPLOYEE_GROUP in (SELECT distinct BASE_MEMBER AS EMPLOYEE_GROUP FROM "ZTF_SPLIT_STRG"( :bup_emplgrp ));
-- HANA does not accept CASE statement in WHERE clause IN () only in WHERE clause =
end if;
if :bup_comp_code = '*' and :bup_emplstatus <> '*' then
RETURN
SELECT
MANDT
,EMPLOYEE
,SEQNR
,COMP_CODE
,EMPLOYEE_STATUS
,EMPLOYEE_GROUP
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,HRPOSITION
,HRPOSITION_DESC
,ORGUNIT
,ORGUNIT_DESC
,DEPARTMENT
,POSITION_WEIGHT
,DATETO
,DATEFROM
,SUBTY
,'' AS OBJPS
,INFTY
,CH_ON
,UNAME
FROM :cte_empl_pos_org_prep_rank
WHERE EMPLOYEE_STATUS in (SELECT distinct BASE_MEMBER AS EMPLOYEE_STATUS FROM "ZTF_SPLIT_STRG"( :p_emplstatus ));
elseif :bup_comp_code <> '*' and :bup_emplstatus = '*' then
RETURN
SELECT
MANDT
,EMPLOYEE
,SEQNR
,COMP_CODE
,EMPLOYEE_STATUS
,EMPLOYEE_GROUP
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,HRPOSITION
,HRPOSITION_DESC
,ORGUNIT
,ORGUNIT_DESC
,DEPARTMENT
,POSITION_WEIGHT
,DATETO
,DATEFROM
,SUBTY
,'' AS OBJPS
,INFTY
,CH_ON
,UNAME
FROM :cte_empl_pos_org_prep_rank
WHERE COMP_CODE in (SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :p_comp_code ));
elseif :bup_comp_code = '*' and :bup_emplstatus = '*' and :bup_emplgrp = '*' then
RETURN
SELECT
MANDT
,EMPLOYEE
,SEQNR
,COMP_CODE
,EMPLOYEE_STATUS
,EMPLOYEE_GROUP
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,HRPOSITION
,HRPOSITION_DESC
,ORGUNIT
,ORGUNIT_DESC
,DEPARTMENT
,POSITION_WEIGHT
,DATETO
,DATEFROM
,SUBTY
,'' AS OBJPS
,INFTY
,CH_ON
,UNAME
FROM :cte_empl_pos_org_prep_rank;
elseif not :bup_comp_code = '*' and not :bup_emplstatus = '*' and not :bup_emplgrp = '*' then
RETURN
SELECT
MANDT
,EMPLOYEE
,SEQNR
,COMP_CODE
,EMPLOYEE_STATUS
,EMPLOYEE_GROUP
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,HRPOSITION
,HRPOSITION_DESC
,ORGUNIT
,ORGUNIT_DESC
,DEPARTMENT
,POSITION_WEIGHT
,DATETO
,DATEFROM
,SUBTY
,'' AS OBJPS
,INFTY
,CH_ON
,UNAME
FROM :cte_result_3;

end if;

ENDMETHOD. "READ_HRP1001

METHOD READ_HRP1001_ORG
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING HRP1001  ZSEZ_TF_HR105_GDFS ZSEZ_TF_HRPOSITION ZSEZ_TF_ORGUNIT
  ZTF_SPLIT_STRG ZSEZ_TF_PARAMS
  .
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, '*', :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

--  USING HRP1001 ZSEZ_TF_HR002 PA0000 PA0001 ZSEZ_TF_HRPOSITION ZSEZ_TF_COSTCENTER ZSEZ_TF_ORGUNIT
cte_hrposition=
SELECT * FROM "ZSEZ_TF_HRPOSITION"(P_KEYDATE => :p_keydate);

cte_orgunit=
SELECT * FROM "ZSEZ_TF_ORGUNIT"(P_KEYDATE => :p_keydate, P_COMP_CODE => '*');

cte_hr105G=
SELECT * FROM "ZSEZ_TF_HR105_GDFS"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => '*', P_EMPLGRP => '*', P_COMP_CODE => '*' );

*cte_hr002=
*SELECT *
*FROM "ZSEZ_TF_HR002"
*(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code )
*;

-- get employee position and orgunit
cte_empl_pos_org_prep=
SELECT
OMS.MANDT,
OMS.OBJID AS EMPLOYEE,
OMS.SOBID AS HRPOSITION,
POST.HRPOSITION_DESC,
OMP.SOBID AS ORGUNIT,
OMS.PROZT AS POSITION_WEIGHT,

OMS.ENDDA AS DATETO,
OMS.BEGDA AS DATEFROM,
OMS.SUBTY,
 '' AS OBJPS,
OMS.INFTY,
OMS.AEDTM AS CH_ON,
OMS.UNAME

FROM HRP1001 as OMS
INNER JOIN HRP1001 AS OMP ON
      OMS.MANDT = OMP.MANDT AND
      OMS.SOBID = OMP.OBJID AND
      OMS.OTYPE = 'P' AND
      OMS.SCLAS = 'S' AND
      OMS.PLVAR = '01' AND
      OMP.PLVAR = OMS.PLVAR AND
      OMS.ISTAT = '1' AND OMP.ISTAT = '1' AND
      OMS.BEGDA <= :p_keydate AND OMS.ENDDA >= :p_keydate AND
      OMP.BEGDA <= :p_keydate AND OMP.ENDDA >= :p_keydate AND
      OMS.SUBTY = 'B008' AND
      OMP.SUBTY = 'A003' AND OMS.MANDT = session_context('CLIENT')
LEFT OUTER JOIN :cte_hrposition AS POST ON
POST.HRPOSITION = OMS.SOBID
;
cte_employee_in_structure=
SELECT
A.MANDT,
A.EMPLOYEE,
CASE WHEN OMM.SUBTY = 'A012' THEN 'X' ELSE '' END AS IS_HEAD_OF,
"A"."ORGUNIT" AS "REPORTS_TO1", "ORGT"."DEPARTMENT" AS "DEPARTMENT", "ORGT"."ORGUNIT_DESC" AS "REPORTS_TO1_DESC",
"OMO"."SOBID" AS "REPORTS_TO2",
"OMO3"."SOBID" AS "REPORTS_TO3",
"OMO4"."SOBID" AS "REPORTS_TO4",
"OMO5"."SOBID" AS "REPORTS_TO5",
"OMO6"."SOBID" AS "REPORTS_TO6",
"OMO7"."SOBID" AS "REPORTS_TO7",
"OMO8"."SOBID" AS "REPORTS_TO8",
"OMO9"."SOBID" AS "REPORTS_TO9",

A.HRPOSITION
,A.POSITION_WEIGHT
,A.HRPOSITION_DESC
,A.DATETO
,A.DATEFROM
,A.SUBTY
,A.OBJPS
,A.INFTY
,A.CH_ON
,A.UNAME

from :cte_empl_pos_org_prep as A
LEFT OUTER JOIN HRP1001 AS OMO ON
OMO.OBJID = A.ORGUNIT AND OMO.BEGDA <= :p_keydate AND OMO.ENDDA >= :p_keydate AND OMO.SUBTY = 'A002' AND A.MANDT = OMO.MANDT
LEFT OUTER JOIN HRP1001 AS OMM ON
OMM.OBJID = A.HRPOSITION AND OMM.OTYPE = 'S' AND OMM.BEGDA <= :p_keydate AND OMM.ENDDA >= :p_keydate AND OMM.SUBTY = 'A012'
AND A.MANDT = OMM.MANDT

LEFT OUTER JOIN HRP1001 AS OMO3 ON
OMO3.OBJID =  OMO.SOBID  AND OMO3.SUBTY = 'A002' AND
OMO3.BEGDA <= :p_keydate AND OMO3.ENDDA >= :p_keydate AND A.MANDT = OMO3.MANDT

LEFT OUTER JOIN HRP1001 AS OMO4 ON
OMO4.OBJID =  OMO3.SOBID  AND OMO4.SUBTY = 'A002' AND
OMO4.BEGDA <= :p_keydate AND OMO4.ENDDA >= :p_keydate AND A.MANDT = OMO4.MANDT

LEFT OUTER JOIN HRP1001 AS OMO5 ON
OMO5.OBJID =  OMO4.SOBID  AND OMO5.SUBTY = 'A002' AND
OMO5.BEGDA <= :p_keydate AND OMO5.ENDDA >= :p_keydate AND A.MANDT = OMO5.MANDT

LEFT OUTER JOIN HRP1001 AS OMO6 ON
OMO6.OBJID =  OMO5.SOBID  AND OMO6.SUBTY = 'A002' AND
OMO6.BEGDA <= :p_keydate AND OMO6.ENDDA >= :p_keydate AND A.MANDT = OMO6.MANDT

LEFT OUTER JOIN HRP1001 AS OMO7 ON
OMO7.OBJID =  OMO6.SOBID  AND OMO7.SUBTY = 'A002' AND
OMO7.BEGDA <= :p_keydate AND OMO7.ENDDA >= :p_keydate AND A.MANDT = OMO7.MANDT

LEFT OUTER JOIN HRP1001 AS OMO8 ON
OMO8.OBJID =  OMO7.SOBID  AND OMO8.SUBTY = 'A002' AND
OMO8.BEGDA <= :p_keydate AND OMO8.ENDDA >= :p_keydate AND A.MANDT = OMO8.MANDT

LEFT OUTER JOIN HRP1001 AS OMO9 ON
OMO9.OBJID =  OMO8.SOBID  AND OMO9.SUBTY = 'A002' AND
OMO9.BEGDA <= :p_keydate AND OMO9.ENDDA >= :p_keydate AND A.MANDT = OMO9.MANDT


LEFT OUTER JOIN :cte_orgunit AS ORGT ON
    ORGT.MANDT = A.MANDT AND
    ORGT.ORGUNIT = A.ORGUNIT AND
    ORGT.DATETO >= :p_keydate AND
    ORGT.DATEFROM <= :p_keydate

--WHERE AND A.MANDT = session_context('CLIENT')

ORDER BY 4
;

if :p_comp_code <> '*'
then
RETURN
SELECT
S.MANDT
,S.EMPLOYEE
,G.COMP_CODE
,G.EMPLOYEE_STATUS
,G.EMPLOYEE_GROUP
,G.LEGAL_FIRST_NAME
,G.LEGAL_LAST_NAME
,G.USRID AS GROUP_ID
,S.IS_HEAD_OF
,S.REPORTS_TO1
,S.REPORTS_TO1_DESC
,CC.CCTR_FROM_OU AS COSTCENTER
,S.DEPARTMENT
,S.REPORTS_TO2
,S.REPORTS_TO3
,S.REPORTS_TO4
,S.REPORTS_TO5
,S.REPORTS_TO6
,S.REPORTS_TO7
,S.REPORTS_TO8
,S.REPORTS_TO9
,S.HRPOSITION
,S.POSITION_WEIGHT
,S.HRPOSITION_DESC
,S.DATETO
,S.DATEFROM
,S.SUBTY
,S.OBJPS
,S.INFTY
,S.CH_ON
,S.UNAME
FROM :cte_employee_in_structure AS S
LEFT OUTER JOIN :cte_hr105G AS G on G.EMPLOYEE = S.EMPLOYEE
LEFT OUTER JOIN :cte_orgunit AS CC ON S.REPORTS_TO1 = CC.ORGUNIT
WHERE G.COMP_CODE IN (SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :p_comp_code ));
else
RETURN
SELECT
S.MANDT
,S.EMPLOYEE
,G.COMP_CODE
,G.EMPLOYEE_STATUS
,G.EMPLOYEE_GROUP
,G.LEGAL_FIRST_NAME
,G.LEGAL_LAST_NAME
,G.USRID AS GROUP_ID
,S.IS_HEAD_OF
,S.REPORTS_TO1
,S.REPORTS_TO1_DESC
,CC.CCTR_FROM_OU AS COSTCENTER
,S.DEPARTMENT
,S.REPORTS_TO2
,S.REPORTS_TO3
,S.REPORTS_TO4
,S.REPORTS_TO5
,S.REPORTS_TO6
,S.REPORTS_TO7
,S.REPORTS_TO8
,S.REPORTS_TO9
,S.HRPOSITION
,S.POSITION_WEIGHT
,S.HRPOSITION_DESC
,S.DATETO
,S.DATEFROM
,S.SUBTY
,S.OBJPS
,S.INFTY
,S.CH_ON
,S.UNAME
FROM :cte_employee_in_structure AS S
LEFT OUTER JOIN :cte_hr105G AS G on G.EMPLOYEE = S.EMPLOYEE
LEFT OUTER JOIN :cte_orgunit AS CC ON S.REPORTS_TO1 = CC.ORGUNIT;
end if;
ENDMETHOD. "READ_HRP1001_ORG

METHOD READ_HRP1001_ORG_CUR
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING HRP1001 ZSEZ_TF_HR105_GDFS ZSEZ_TF_HRPOSITION ZSEZ_TF_ORGUNIT

  .
declare p_keydate varchar( 8 );
SELECT TO_VARCHAR(CURRENT_DATE,'YYYYMMDD') into p_keydate FROM dummy;

cte_hrposition=
SELECT * FROM "ZSEZ_TF_HRPOSITION"(P_KEYDATE => :p_keydate);

cte_orgunit=
SELECT * FROM "ZSEZ_TF_ORGUNIT"(P_KEYDATE => :p_keydate, P_COMP_CODE => '*');

cte_hr105G=
SELECT * FROM "ZSEZ_TF_HR105_GDFS"( P_KEYDATE => :p_keydate , P_EMPLSTATUS => '3', P_EMPLGRP => '*', P_COMP_CODE => '*' );

*cte_hr002=
*SELECT *
*FROM "ZSEZ_TF_HR002"
*(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_COMP_CODE => :p_comp_code )
*;

-- get employee position and orgunit
cte_empl_pos_org_prep=
SELECT
OMS.MANDT,
OMS.OBJID AS EMPLOYEE,
OMS.SOBID AS HRPOSITION,
POST.HRPOSITION_DESC,
OMP.SOBID AS ORGUNIT,
OMS.PROZT AS POSITION_WEIGHT,

OMS.ENDDA AS DATETO,
OMS.BEGDA AS DATEFROM,
OMS.SUBTY,
 '' AS OBJPS,
OMS.INFTY,
OMS.AEDTM AS CH_ON,
OMS.UNAME

FROM HRP1001 as OMS


INNER JOIN HRP1001 AS OMP ON
      OMS.MANDT = OMP.MANDT AND
      OMS.SOBID = OMP.OBJID AND
      OMS.OTYPE = 'P' AND
      OMS.SCLAS = 'S' AND
      OMS.PLVAR = '01' AND
      OMP.PLVAR = OMS.PLVAR AND
      OMS.ISTAT = '1' AND OMP.ISTAT = '1' AND
      OMS.BEGDA <= :p_keydate AND OMS.ENDDA >= :p_keydate AND
      OMP.BEGDA <= :p_keydate AND OMP.ENDDA >= :p_keydate AND
      OMS.SUBTY = 'B008' AND
      OMP.SUBTY = 'A003' AND OMS.MANDT = session_context('CLIENT')
LEFT OUTER JOIN :cte_hrposition AS POST ON
POST.HRPOSITION = OMS.SOBID
;
cte_employee_in_structure=
SELECT
A.MANDT,
A.EMPLOYEE,
CASE WHEN OMM.SUBTY = 'A012' THEN 'X' ELSE '' END AS IS_HEAD_OF,
"A"."ORGUNIT" AS "REPORTS_TO1", "ORGT"."DEPARTMENT" AS "DEPARTMENT", "ORGT"."ORGUNIT_DESC" AS "REPORTS_TO1_DESC",
"OMO"."SOBID" AS "REPORTS_TO2",
"OMO3"."SOBID" AS "REPORTS_TO3",
"OMO4"."SOBID" AS "REPORTS_TO4",
"OMO5"."SOBID" AS "REPORTS_TO5",
"OMO6"."SOBID" AS "REPORTS_TO6",
"OMO7"."SOBID" AS "REPORTS_TO7",
"OMO8"."SOBID" AS "REPORTS_TO8",
"OMO9"."SOBID" AS "REPORTS_TO9",

A.HRPOSITION
,A.POSITION_WEIGHT
,A.HRPOSITION_DESC
,A.DATETO
,A.DATEFROM
,A.SUBTY
,A.OBJPS
,A.INFTY
,A.CH_ON
,A.UNAME

from :cte_empl_pos_org_prep as A
LEFT OUTER JOIN HRP1001 AS OMO ON
OMO.OBJID = A.ORGUNIT AND OMO.BEGDA <= :p_keydate AND OMO.ENDDA >= :p_keydate AND OMO.SUBTY = 'A002' AND A.MANDT = OMO.MANDT
LEFT OUTER JOIN HRP1001 AS OMM ON
OMM.OBJID = A.HRPOSITION AND OMM.OTYPE = 'S' AND OMM.BEGDA <= :p_keydate AND OMM.ENDDA >= :p_keydate AND OMM.SUBTY = 'A012'
AND A.MANDT = OMM.MANDT

LEFT OUTER JOIN HRP1001 AS OMO3 ON
OMO3.OBJID =  OMO.SOBID  AND OMO3.SUBTY = 'A002' AND
OMO3.BEGDA <= :p_keydate AND OMO3.ENDDA >= :p_keydate AND A.MANDT = OMO3.MANDT

LEFT OUTER JOIN HRP1001 AS OMO4 ON
OMO4.OBJID =  OMO3.SOBID  AND OMO4.SUBTY = 'A002' AND
OMO4.BEGDA <= :p_keydate AND OMO4.ENDDA >= :p_keydate AND A.MANDT = OMO4.MANDT

LEFT OUTER JOIN HRP1001 AS OMO5 ON
OMO5.OBJID =  OMO4.SOBID  AND OMO5.SUBTY = 'A002' AND
OMO5.BEGDA <= :p_keydate AND OMO5.ENDDA >= :p_keydate AND A.MANDT = OMO5.MANDT

LEFT OUTER JOIN HRP1001 AS OMO6 ON
OMO6.OBJID =  OMO5.SOBID  AND OMO6.SUBTY = 'A002' AND
OMO6.BEGDA <= :p_keydate AND OMO6.ENDDA >= :p_keydate AND A.MANDT = OMO6.MANDT

LEFT OUTER JOIN HRP1001 AS OMO7 ON
OMO7.OBJID =  OMO6.SOBID  AND OMO7.SUBTY = 'A002' AND
OMO7.BEGDA <= :p_keydate AND OMO7.ENDDA >= :p_keydate AND A.MANDT = OMO7.MANDT

LEFT OUTER JOIN HRP1001 AS OMO8 ON
OMO8.OBJID =  OMO7.SOBID  AND OMO8.SUBTY = 'A002' AND
OMO8.BEGDA <= :p_keydate AND OMO8.ENDDA >= :p_keydate AND A.MANDT = OMO8.MANDT

LEFT OUTER JOIN HRP1001 AS OMO9 ON
OMO9.OBJID =  OMO8.SOBID  AND OMO9.SUBTY = 'A002' AND
OMO9.BEGDA <= :p_keydate AND OMO9.ENDDA >= :p_keydate AND A.MANDT = OMO9.MANDT


LEFT OUTER JOIN :cte_orgunit AS ORGT ON
    ORGT.MANDT = A.MANDT AND
    ORGT.ORGUNIT = A.ORGUNIT AND
    ORGT.DATETO >= :p_keydate AND
    ORGT.DATEFROM <= :p_keydate
--WHERE A.MANDT = session_context('CLIENT')
ORDER BY 4
;

RETURN
SELECT
S.MANDT
,S.EMPLOYEE
,G.COMP_CODE
,G.LEGAL_ENTITY
,G.EMPLOYEE_STATUS
,G.EMPLOYEE_GROUP
,G.LEGAL_FIRST_NAME
,G.LEGAL_LAST_NAME
,G.USRID AS GROUP_ID
,S.IS_HEAD_OF
,S.REPORTS_TO1
,S.REPORTS_TO1_DESC
,CC.CCTR_FROM_OU AS COSTCENTER
,S.DEPARTMENT

,S.REPORTS_TO2
,S.REPORTS_TO3
,S.REPORTS_TO4
,S.REPORTS_TO5
,S.REPORTS_TO6
,S.REPORTS_TO7
,S.REPORTS_TO8
,S.REPORTS_TO9
,S.HRPOSITION
,S.POSITION_WEIGHT
,S.HRPOSITION_DESC
,S.DATETO
,S.DATEFROM
,S.SUBTY
,S.OBJPS
,S.INFTY
,S.CH_ON
,S.UNAME
FROM :cte_employee_in_structure AS S
LEFT OUTER JOIN :cte_hr105G AS G on G.EMPLOYEE = S.EMPLOYEE
LEFT OUTER JOIN :cte_orgunit AS CC ON S.REPORTS_TO1 = CC.ORGUNIT
;
ENDMETHOD. "READ_HRP1001_ORG_CUR

METHOD GET_N_PLUS_ONE_FROM_ORGSTRUCT
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZTF_SPLIT_STRG ZSEZ_TF_ORG_STRUCT ZSEZ_TF_PARAMS
  .
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
  DECLARE bup_level varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, '*', :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;
bup_level := p_level;
cte_org=
SELECT *
FROM "ZSEZ_TF_ORG_STRUCT"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => '*', P_COMP_CODE => '*' );

cte_empl_orgunits=
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO1 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 1 as SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO2 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 2 as SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO3 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 3 AS SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO4 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 4 AS SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO5 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 5 AS SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO6 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 6 AS SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO7 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 7 AS SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO8 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 8 AS SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
UNION
SELECT MANDT, EMPLOYEE, COMP_CODE, EMPLOYEE_STATUS, LEGAL_FIRST_NAME, LEGAL_LAST_NAME, GROUP_ID, IS_HEAD_OF, REPORTS_TO9 AS ORGUNIT,
COSTCENTER, DEPARTMENT, REPORTS_TO1_DESC, 9 AS SEQ, HRPOSITION, POSITION_WEIGHT, HRPOSITION_DESC, DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM :cte_org
ORDER BY EMPLOYEE, HRPOSITION, ORGUNIT
;
-- redefine ZSEZ_TF_EMPLOYEE_N_PLUS_ONE with key EMPLOYEE, SEQNR, HRPOSITION
-- partition should be by employee, hrposition, order by EMPLOYEE
-- one employee can have several hrposition with eventually different org_unit with a different boss
cte_empl_orgunits_dist=
SELECT
row_number() over
(partition by EMPLOYEE, HRPOSITION ORDER BY EMPLOYEE, SEQ ) as SEQNR
,MANDT
,EMPLOYEE AS BASE_EMPLOYEE
,COMP_CODE AS BASE_EMPL_COMP_CODE
,EMPLOYEE_STATUS AS BASE_EMPL_STATUS
,LEGAL_FIRST_NAME AS BASE_EMPL_LEGAL_FIRST_NAME
,LEGAL_LAST_NAME AS BASE_EMPL_LEGAL_LAST_NAME
,GROUP_ID AS BASE_EMPL_GROUP_ID
,ORGUNIT AS BASE_EMPL_ORGUNIT
,REPORTS_TO1_DESC AS BASE_EMPL_ORGUNIT_DESC
,COSTCENTER AS BASE_EMPL_COSTCENTER
,DEPARTMENT AS BASE_EMPL_DEPARTMENT
,HRPOSITION AS BASE_EMPL_HRPOSITION, POSITION_WEIGHT AS BASE_EMPL_POSITION_WEIGHT, HRPOSITION_DESC AS BASE_EMPL_HRPOSITION_DESC,
DATETO, DATEFROM, SUBTY, OBJPS, INFTY, CH_ON, UNAME
FROM  :cte_empl_orgunits
WHERE NOT ORGUNIT IS NULL;

cte_employee_bosses=
SELECT EO.SEQNR, EO.BASE_EMPLOYEE, EO.BASE_EMPL_COMP_CODE, EO.BASE_EMPL_STATUS,
EO.BASE_EMPL_LEGAL_FIRST_NAME, EO.BASE_EMPL_LEGAL_LAST_NAME, EO.BASE_EMPL_GROUP_ID, EO.BASE_EMPL_HRPOSITION,
EO.BASE_EMPL_POSITION_WEIGHT, EO.BASE_EMPL_HRPOSITION_DESC, EO.BASE_EMPL_ORGUNIT,EO.BASE_EMPL_COSTCENTER,EO.BASE_EMPL_DEPARTMENT,EO.BASE_EMPL_ORGUNIT_DESC,
E.*
FROM :cte_org AS E
LEFT OUTER JOIN :cte_empl_orgunits_dist AS EO
ON EO.BASE_EMPL_ORGUNIT = E.REPORTS_TO1 AND E.IS_HEAD_OF = 'X'
ORDER BY EO.SEQNR
;
cte_n_plus_one =
SELECT row_number() over
(partition by B.BASE_EMPLOYEE,B.BASE_EMPL_POSITION_WEIGHT,B.BASE_EMPL_HRPOSITION ORDER BY B.SEQNR ASC) as SEQNRX
,B.*
FROM :cte_employee_bosses AS B
WHERE B.BASE_EMPLOYEE <> B.EMPLOYEE
;

if :p_level = '*'
then
p_level := '';
SELECT DISTINCT SEQNRX FROM :cte_n_plus_one;
cte_dist_level=
SELECT DISTINCT SEQNRX FROM :cte_n_plus_one;
select STRING_AGG(SEQNRX, ',' ORDER BY SEQNRX) into p_level FROM :cte_dist_level;
end if;

if :bup_emplstatus = '*' and :bup_comp_code = '*' and :bup_level = '*'
then
RETURN
SELECT
MANDT
,BASE_EMPLOYEE
,BASE_EMPL_HRPOSITION
,SEQNRX
,BASE_EMPL_COMP_CODE
,BASE_EMPL_STATUS
,BASE_EMPL_LEGAL_FIRST_NAME
,BASE_EMPL_LEGAL_LAST_NAME
,BASE_EMPL_GROUP_ID

,BASE_EMPL_HRPOSITION_DESC
,BASE_EMPL_POSITION_WEIGHT
,BASE_EMPL_ORGUNIT
,BASE_EMPL_COSTCENTER
,BASE_EMPL_DEPARTMENT
,BASE_EMPL_ORGUNIT_DESC
,EMPLOYEE   AS N_PLUS_ONE
,COMP_CODE AS N_PLUS_ONE_COMP_CODE
,EMPLOYEE_STATUS AS N_PLUS_ONE_STATUS
,LEGAL_FIRST_NAME AS  N_PLUS_ONE_FIRST_NAME
,LEGAL_LAST_NAME AS N_PLUS_ONE_LAST_NAME
,GROUP_ID   AS  N_PLUS_ONE_GROUP_ID
,HRPOSITION AS N_PLUS_ONE_EMPL_HRPOSITION
,HRPOSITION_DESC AS N_PLUS_ONE_HRPOSITION_DESC
,POSITION_WEIGHT AS N_PLUS_ONE_POSITION_WEIGHT
,REPORTS_TO1
,REPORTS_TO1_DESC
,COSTCENTER AS N_PLUS_ONE_COSTCENTER
,DEPARTMENT AS N_PLUS_ONE_DEPARTMENT
,REPORTS_TO2
,REPORTS_TO3
,REPORTS_TO4
,REPORTS_TO5
,REPORTS_TO6
,REPORTS_TO7
,REPORTS_TO8
,REPORTS_TO9
,DATETO
,DATEFROM
,SUBTY
,OBJPS
,INFTY
,CH_ON
,UNAME
FROM :cte_n_plus_one

ORDER BY BASE_EMPLOYEE ASC, BASE_EMPL_POSITION_WEIGHT DESC;

ELSE
RETURN
SELECT
MANDT
,BASE_EMPLOYEE
,BASE_EMPL_HRPOSITION
,SEQNRX
,BASE_EMPL_COMP_CODE
,BASE_EMPL_STATUS
,BASE_EMPL_LEGAL_FIRST_NAME
,BASE_EMPL_LEGAL_LAST_NAME
,BASE_EMPL_GROUP_ID

,BASE_EMPL_HRPOSITION_DESC
,BASE_EMPL_POSITION_WEIGHT
,BASE_EMPL_ORGUNIT
,BASE_EMPL_COSTCENTER
,BASE_EMPL_DEPARTMENT
,BASE_EMPL_ORGUNIT_DESC
,EMPLOYEE   AS N_PLUS_ONE
,COMP_CODE AS N_PLUS_ONE_COMP_CODE
,EMPLOYEE_STATUS AS N_PLUS_ONE_STATUS
,LEGAL_FIRST_NAME AS  N_PLUS_ONE_FIRST_NAME
,LEGAL_LAST_NAME AS N_PLUS_ONE_LAST_NAME
,GROUP_ID   AS  N_PLUS_ONE_GROUP_ID
,HRPOSITION AS N_PLUS_ONE_EMPL_HRPOSITION
,HRPOSITION_DESC AS N_PLUS_ONE_HRPOSITION_DESC
,POSITION_WEIGHT AS N_PLUS_ONE_POSITION_WEIGHT
,REPORTS_TO1
,REPORTS_TO1_DESC
,COSTCENTER AS N_PLUS_ONE_COSTCENTER
,DEPARTMENT AS N_PLUS_ONE_DEPARTMENT
,REPORTS_TO2
,REPORTS_TO3
,REPORTS_TO4
,REPORTS_TO5
,REPORTS_TO6
,REPORTS_TO7
,REPORTS_TO8
,REPORTS_TO9
,DATETO
,DATEFROM
,SUBTY
,OBJPS
,INFTY
,CH_ON
,UNAME
FROM :cte_n_plus_one
WHERE (
BASE_EMPL_COMP_CODE IN ( SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :p_comp_code ))
OR COMP_CODE IN (SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :p_comp_code ))
)

AND
(
BASE_EMPL_STATUS IN (SELECT distinct BASE_MEMBER AS STAT2 FROM "ZTF_SPLIT_STRG"( :p_emplstatus ))
OR EMPLOYEE_STATUS IN ( SELECT distinct BASE_MEMBER AS STAT2 FROM "ZTF_SPLIT_STRG"( :p_emplstatus ))
)
AND SEQNRX IN
(SELECT distinct BASE_MEMBER AS SEQNRX FROM "ZTF_SPLIT_STRG"( :p_level ))

ORDER BY BASE_EMPLOYEE, BASE_EMPL_HRPOSITION, SEQNRX;
END IF;

ENDMETHOD. "GET_N_PLUS_ONE_FROM_ORGSTRUCT for ZSEZ_TF_EMPL_N_PLUS_ONE

METHOD READ_HR002
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_PARAMS PA0002 PA0000 PA0001 PA0101  T005T T005 T529T T530T T002T
  zsez_map_le
  ZTF_SPLIT_STRG
  .
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

--BVWMV AS DISABILITY
cte_hr101=
SELECT DISTINCT MANDT, PERNR, CASE BVWMV WHEN 'X' THEN 'Y' ELSE 'N' END AS BVWMV FROM PA0101 WHERE MANDT = session_context('CLIENT');

cte_hr000_prep=
SELECT
row_number() over
(partition by PA0000.PERNR
--ORDER BY PA0000.STAT2 DESC, PA0000.AEDTM DESC) as rownumber,
ORDER BY PA0000.BEGDA DESC) as rownumber,
PA0000.MANDT
,PA0000.PERNR AS EMPLOYEE
,PA0000.STAT2 AS EMPLOYEE_STATUS
,PA0000.MASSN AS ACTIONTYPE
,ATT.MNTXT AS ACTIONTYPE_DESC
,PA0000.MASSG AS ACTIONREAS
,ART.MGTXT AS ACTIONREAS_DESC

FROM PA0000
LEFT OUTER JOIN T529T AS ATT ON ATT.MANDT = PA0000.MANDT AND ATT.MASSN = PA0000.MASSN
AND PA0000.BEGDA <= :p_keydate AND PA0000.ENDDA >= :p_keydate
AND ATT.SPRSL = 'E'
LEFT OUTER JOIN T530T AS ART ON ART.MANDT = ATT.MANDT AND ART.MASSG = PA0000.MASSG AND ART.MASSN = ATT.MASSN
AND ART.SPRSL = 'E'

WHERE PA0000.MANDT = session_context('CLIENT')
AND PA0000.STAT2 in (SELECT distinct BASE_MEMBER AS STAT2 FROM "ZTF_SPLIT_STRG"( :p_emplstatus ));

cte_hr000=
SELECT
MANDT
,EMPLOYEE
,EMPLOYEE_STATUS
,ACTIONTYPE
,ACTIONTYPE_DESC
,ACTIONREAS
,ACTIONREAS_DESC
FROM :cte_hr000_prep
WHERE rownumber = 1
;
cte_hr001_prep=
SELECT
row_number() over
(partition by PA0001.PERNR
ORDER BY PA0001.AEDTM DESC) as rownumber,
PA0001.MANDT
,PA0001.PERNR AS EMPLOYEE
,PA0001.BUKRS AS COMP_CODE
,PA0001.WERKS AS PERS_AREA
,PA0001.btrtl AS PERS_SAREA
,PA0001.PERSG AS EMPLOYEE_GROUP
FROM PA0001
WHERE BEGDA <= :p_keydate AND ENDDA >= :p_keydate and MANDT = session_context('CLIENT')
AND BUKRS in (SELECT distinct BASE_MEMBER AS BUKRS FROM "ZTF_SPLIT_STRG"( :p_comp_code ))
;
cte_hr001=
SELECT PREP.*
,MAP.LEGAL_ENTITY
FROM :cte_hr001_prep as PREP
LEFT OUTER JOIN zsez_map_le AS MAP
ON MAP.CLIENT = PREP.MANDT
AND MAP.COMP_CODE = PREP.COMP_CODE
AND MAP.PERS_AREA = PREP.PERS_AREA
AND MAP.PERS_SAREA = PREP.PERS_SAREA
WHERE PREP.rownumber = 1
;
cte_hr002_prep=
SELECT
HR002_P.MANDT
,HR002_P.PERNR AS EMPLOYEE
,HR001.COMP_CODE
,HR001.LEGAL_ENTITY
,HR000.EMPLOYEE_STATUS
,HR001.EMPLOYEE_GROUP
,HR002_P.VORNA AS LEGAL_FIRST_NAME
,HR002_P.NACHN AS LEGAL_LAST_NAME
,HR002_P.INITS
,HR002_P.NAME2 AS BIRTH_NAME
,HR002_P.TITEL
,HR002_P.RUFNM AS NICK_NAME
,HR002_P.MIDNM AS MIDDLE_NAME
,HR002_P.ANRED
,HR002_P.GESCH AS GENDER
,HR002_P.GBLND AS COUNTRY_OF_BIRTH_SAP
,HR002_P.GBDEP AS REGION_OF_BIRTH
,HR002_P.GBORT AS PLACE_OF_BIRTH
,HR002_P.NATIO AS NATION_SAP
,HR002_P.NATI2 AS NATION_SAP2
,HR002_P.NATI3 AS NATION_SAP3
,HR002_P.SPRSL AS BUSINESS_COMMUNICAT_LANGUAGE
,LGT.SPTXT AS BUSINESS_COM_LANGUAGE_TXT
,HR002_P.KONFE AS RELIGION_KEY
,HR002_P.FAMST AS MARITAL_STATUS_KEY
,HR002_P.FAMDT AS DATE_OF_MARITAL_STATUS
,HR002_P.ANZKD AS FP_TRCHILD
,HR002_P.GBDAT AS DATEBIRTH
,HR101.BVWMV AS DISABILITY
,HR000.ACTIONTYPE
,HR000.ACTIONREAS
,HR000.ACTIONTYPE_DESC
,HR000.ACTIONREAS_DESC

,HR002_P.ENDDA AS DATETO
,HR002_P.BEGDA AS DATEFROM
,HR002_P.SUBTY
,HR002_P.OBJPS
,HR002_P.SEQNR
,'0002' AS INFTY
,HR002_P.AEDTM AS CH_ON
,HR002_P.UNAME
FROM PA0002 as HR002_P
LEFT OUTER JOIN :cte_hr000 as HR000 ON HR002_P.PERNR = HR000.EMPLOYEE AND HR002_P.MANDT = HR000.MANDT
LEFT OUTER JOIN :cte_hr001 as HR001 ON HR002_P.PERNR = HR001.EMPLOYEE AND HR002_P.MANDT = HR001.MANDT
LEFT OUTER JOIN :cte_hr101 as HR101 ON HR002_P.PERNR = HR101.PERNR AND HR002_P.MANDT = HR101.MANDT
LEFT OUTER JOIN T002T as LGT ON LGT.SPRSL =  HR002_P.SPRSL AND LGT.SPRAS = 'E'
WHERE HR002_P.MANDT = session_context('CLIENT')
AND HR002_P.ENDDA >= :p_keydate AND HR002_P.BEGDA <= :p_keydate
;

if bup_comp_code = '*' and bup_emplstatus = '*' THEN
cte_temp=
SELECT
HR002.MANDT
,HR002.EMPLOYEE
,HR002.COMP_CODE
,HR002.LEGAL_ENTITY
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME
,HR002.INITS
,HR002.BIRTH_NAME
,HR002.TITEL
,HR002.NICK_NAME
,HR002.MIDDLE_NAME
,HR002.ANRED
,HR002.GENDER
,HR002.COUNTRY_OF_BIRTH_SAP
,CTRY_BIRTHT.LANDX50 AS COUNTRY_OF_BIRTH
,CTRY_BIRTH.INTCA3 AS COUNTRY_OF_BIRTH_ISO
,HR002.PLACE_OF_BIRTH
,HR002.REGION_OF_BIRTH
,HR002.NATION_SAP
,CTRY_NATIO.INTCA3 AS NATIONALITY_ISO
,CTRY_NATIOT.LANDX50 AS NATIONALITY
,HR002.NATION_SAP2
,CTRY_NATIO2.INTCA3 AS SECOND_NATIONALITY_ISO
,CTRY_NATIO2T.LANDX50 AS SECOND_NATIONALITY
,HR002.NATION_SAP3
,HR002.BUSINESS_COMMUNICAT_LANGUAGE
,HR002.BUSINESS_COM_LANGUAGE_TXT
,HR002.RELIGION_KEY
,HR002.MARITAL_STATUS_KEY
,HR002.DATE_OF_MARITAL_STATUS
,HR002.FP_TRCHILD
,HR002.DATEBIRTH
,HR002.DISABILITY
,HR002.ACTIONTYPE
,HR002.ACTIONTYPE_DESC
,HR002.ACTIONREAS
,HR002.ACTIONREAS_DESC

,HR002.DATETO
,HR002.DATEFROM
,HR002.SUBTY
,HR002.OBJPS
,HR002.SEQNR
,HR002.INFTY
,HR002.CH_ON
,HR002.UNAME
FROM :cte_hr002_prep AS HR002
LEFT OUTER JOIN T005 AS CTRY_BIRTH ON CTRY_BIRTH.LAND1 = HR002.COUNTRY_OF_BIRTH_SAP AND CTRY_BIRTH.MANDT = HR002.MANDT
LEFT OUTER JOIN T005T AS CTRY_BIRTHT ON CTRY_BIRTHT.LAND1 = HR002.COUNTRY_OF_BIRTH_SAP AND CTRY_BIRTHT.MANDT = HR002.MANDT AND CTRY_BIRTHT.SPRAS = 'E'
LEFT OUTER JOIN T005 AS CTRY_NATIO ON CTRY_NATIO.LAND1 = HR002.NATION_SAP AND CTRY_NATIO.MANDT = HR002.MANDT
LEFT OUTER JOIN T005T AS CTRY_NATIOT ON CTRY_NATIOT.LAND1 = HR002.NATION_SAP AND CTRY_NATIOT.MANDT = HR002.MANDT AND CTRY_NATIOT.SPRAS = 'E'
LEFT OUTER JOIN T005 AS CTRY_NATIO2 ON CTRY_NATIO2.LAND1 = HR002.NATION_SAP2 AND CTRY_NATIO2.MANDT = HR002.MANDT
LEFT OUTER JOIN T005T AS CTRY_NATIO2T ON CTRY_NATIO2T.LAND1 = HR002.NATION_SAP2 AND CTRY_NATIO2T.MANDT = HR002.MANDT AND CTRY_NATIO2T.SPRAS = 'E'
ORDER BY 4,3,2;
ELSE
cte_temp=
SELECT
HR002.MANDT
,HR002.EMPLOYEE
,HR002.COMP_CODE
,HR002.LEGAL_ENTITY
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME
,HR002.INITS
,HR002.BIRTH_NAME
,HR002.TITEL
,HR002.NICK_NAME
,HR002.MIDDLE_NAME
,HR002.ANRED
,HR002.GENDER
,HR002.COUNTRY_OF_BIRTH_SAP
,CTRY_BIRTHT.LANDX50 AS COUNTRY_OF_BIRTH
,CTRY_BIRTH.INTCA3 AS COUNTRY_OF_BIRTH_ISO
,HR002.PLACE_OF_BIRTH
,HR002.REGION_OF_BIRTH
,HR002.NATION_SAP
,CTRY_NATIO.INTCA3 AS NATIONALITY_ISO
,CTRY_NATIOT.LANDX50 AS NATIONALITY
,HR002.NATION_SAP2
,CTRY_NATIO2.INTCA3 AS SECOND_NATIONALITY_ISO
,CTRY_NATIO2T.LANDX50 AS SECOND_NATIONALITY
,HR002.NATION_SAP3
,HR002.BUSINESS_COMMUNICAT_LANGUAGE
,HR002.BUSINESS_COM_LANGUAGE_TXT
,HR002.RELIGION_KEY
,HR002.MARITAL_STATUS_KEY
,HR002.DATE_OF_MARITAL_STATUS
,HR002.FP_TRCHILD
,HR002.DATEBIRTH
,HR002.DISABILITY
,HR002.ACTIONTYPE
,HR002.ACTIONTYPE_DESC
,HR002.ACTIONREAS
,HR002.ACTIONREAS_DESC

,HR002.DATETO
,HR002.DATEFROM
,HR002.SUBTY
,HR002.OBJPS
,HR002.SEQNR
,HR002.INFTY
,HR002.CH_ON
,HR002.UNAME
FROM :cte_hr002_prep AS HR002
LEFT OUTER JOIN T005 AS CTRY_BIRTH ON CTRY_BIRTH.LAND1 = HR002.COUNTRY_OF_BIRTH_SAP AND CTRY_BIRTH.MANDT = HR002.MANDT
LEFT OUTER JOIN T005T AS CTRY_BIRTHT ON CTRY_BIRTHT.LAND1 = HR002.COUNTRY_OF_BIRTH_SAP AND CTRY_BIRTHT.MANDT = HR002.MANDT AND CTRY_BIRTHT.SPRAS = 'E'
LEFT OUTER JOIN T005 AS CTRY_NATIO ON CTRY_NATIO.LAND1 = HR002.NATION_SAP AND CTRY_NATIO.MANDT = HR002.MANDT
LEFT OUTER JOIN T005T AS CTRY_NATIOT ON CTRY_NATIOT.LAND1 = HR002.NATION_SAP AND CTRY_NATIOT.MANDT = HR002.MANDT AND CTRY_NATIOT.SPRAS = 'E'
LEFT OUTER JOIN T005 AS CTRY_NATIO2 ON CTRY_NATIO2.LAND1 = HR002.NATION_SAP2 AND CTRY_NATIO2.MANDT = HR002.MANDT
LEFT OUTER JOIN T005T AS CTRY_NATIO2T ON CTRY_NATIO2T.LAND1 = HR002.NATION_SAP2 AND CTRY_NATIO2T.MANDT = HR002.MANDT AND CTRY_NATIO2T.SPRAS = 'E'

WHERE HR002.COMP_CODE IN
(SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :p_comp_code ))
AND HR002.EMPLOYEE_STATUS IN
(SELECT distinct BASE_MEMBER AS EMPLOYEE_STATUS FROM "ZTF_SPLIT_STRG"( :p_emplstatus ))
ORDER BY 4,3,2;
end if;

RETURN
SELECT * FROM :cte_temp ORDER BY 2;

ENDMETHOD. "READ_HR002

METHOD READ_HR9007
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA9007
  ZSEZ_TF_PARAMS
  .
  DECLARE p_emplgrp varchar ( 1333 );
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp , :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code );

RETURN
SELECT
PA9007.MANDT
,PA9007.PERNR AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,PA9007.GRADE
,PA9007.BAREME
,PA9007.ETUDE
,PA9007.FILIERE
,PA9007.FIL_NIV2
,PA9007.EVALUATEUR
,PA9007.RESP
,PA9007.QUALIF
,PA9007.UH1
,PA9007.UH2
,PA9007.UH3
,PA9007.UH4
,PA9007.ZTECH
,PA9007.ZHRDIPLOMA1
,PA9007.ZHRDIPLOMA2
,PA9007.ZHRDIPLOMA3
,PA9007.ZPERF_ELIG


,PA9007.ENDDA AS DATETO
,PA9007.BEGDA AS DATEFROM
,PA9007.SUBTY
,PA9007.OBJPS
,PA9007.SEQNR
,'9007' AS INFTY
,PA9007.aedtm AS CH_ON
,PA9007.UNAME
FROM PA9007
INNER JOIN :cte_hr002 AS HR002 ON HR002.EMPLOYEE = PA9007.PERNR
AND HR002.MANDT = PA9007.MANDT
AND PA9007.BEGDA <= :p_keydate AND PA9007.ENDDA >= :p_keydate
WHERE PA9007.MANDT = session_context('CLIENT')
;

ENDMETHOD. "READ_HR9007

METHOD READ_HR001
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002  PA0001
  T500P T001P T501T T503T
  ZSEZ_LEGAL_ENTITY_VIEW
  ZSEZ_TF_HRPOSITION
  ZSEZ_TF_PARAMS ZTF_SPLIT_STRG ZSEZ_TF_HR007
  .
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hrposition=
SELECT *
FROM "ZSEZ_TF_HRPOSITION"( P_KEYDATE => :p_keydate );

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => '*', P_COMP_CODE => :p_comp_code );

cte_hr007=
SELECT *
FROM "ZSEZ_TF_HR007"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code );

cte_result=
SELECT
HR01.MANDT
,HR01.PERNR AS EMPLOYEE
,HR02.COMP_CODE
,HR02.EMPLOYEE_STATUS
,HR02.EMPLOYEE_GROUP
,HR02.LEGAL_FIRST_NAME
,HR02.LEGAL_LAST_NAME
,HR01.werks   AS  PERS_AREA
,PAT.NAME1  AS  PERS_AREA_DESC
,HR01.BTRTL   AS  PERS_SAREA
,PSAT.btext AS  PERS_SAREA_DESC
,HR01.persg   AS  EMPLGROUP
,EGT.PTEXT  AS  EMPLGROUP_TEXT
,HR01.PERSK   AS  EMPLSGROUP
,ESGT.PTEXT AS  EMPLSGROUP_TEXT
,STELL   AS  JOB
,LE.LEGAL_ENTITY    AS  LEGAL_ENTITY
,LE.LEGAL_ENTITY_DESC   AS  LEGAL_ENTITY_DESC
,HR01.ABKRS   AS  PAYRL_AREA
,HR01.ANSVH   AS  EMPLCNTRCT
,HR01.KOKRS   AS  CO_AREA
,HR01.KOSTL   AS  MAST_CCTR
,HR01.ORGEH   AS  ORGUNIT
,REPLACE(HR01.PLANS,'99999999',POS.HRPOSITION) AS HRPOSITION
,POS.HRPOSITION_TEXT  AS  HRPOSITION_TEXT
,HR07.EMPCT AS EMPLOYEE_PERC
,HR01.ZZ_ERP_KEY_0001_04  AS  PARTENA_ERP_KEY

,HR01.ENDDA AS DATETO
,HR01.BEGDA AS DATEFROM
,HR01.SUBTY
,HR01.OBJPS
,HR01.SEQNR
,'0001' AS INFTY
,HR01.AEDTM AS CH_ON
,HR01.UNAME
FROM PA0001 AS HR01
LEFT OUTER JOIN :cte_hr002 AS HR02 ON HR02.EMPLOYEE = HR01.PERNR
LEFT OUTER JOIN :cte_hrposition AS POS ON POS.HRPOSITION = HR01.PLANS AND POS.MANDT = HR01.MANDT
LEFT OUTER JOIN :cte_hr007 AS HR07 ON HR07.EMPLOYEE = HR01.PERNR AND HR07.MANDT = HR01.MANDT
LEFT OUTER JOIN T500P AS PAT ON PAT.persa = HR01.werks AND PAT.MANDT = HR01.MANDT
 LEFT OUTER JOIN T001P AS PSAT ON PSAT.btrtl = HR01.btrtl AND PSAT.werks = HR01.werks AND PSAT.MANDT = HR01.MANDT
  LEFT OUTER JOIN T501T AS EGT ON EGT.persg = HR01.persg AND EGT.MANDT = HR01.MANDT AND EGT.sprsl = 'E'
   LEFT OUTER JOIN T503T AS ESGT ON ESGT.PERSK = HR01.persk AND ESGT.MANDT = HR01.MANDT AND ESGT.sprsl = 'E'

LEFT OUTER JOIN ZSEZ_LEGAL_ENTITY_VIEW AS LE
ON LE.MANDT = HR01.MANDT AND LE.COMP_CODE = HR01.BUKRS AND HR01.werks = LE.PERS_AREA AND HR01.btrtl = LE.PERS_SAREA
WHERE HR01.MANDT = session_context('CLIENT') AND HR01.BEGDA <= :p_keydate AND HR01.ENDDA >= :p_keydate
;
-- hard to believe but : if :bup_comp_code <> '*'  and :bup_emplstatus <> '*' DOES NOT test
if :bup_comp_code <> '*' then
cte_result_1=
SELECT *
FROM :cte_result
WHERE COMP_CODE in (SELECT distinct BASE_MEMBER AS COMP_CODE FROM "ZTF_SPLIT_STRG"( :bup_comp_code ));
ELSEIF :bup_comp_code = '*' then
cte_result_1=
SELECT *
FROM :cte_result;
END IF ;
if :bup_emplstatus <> '*' then
cte_result_2=
SELECT * FROM :cte_result_1
WHERE EMPLOYEE_STATUS in (SELECT distinct BASE_MEMBER AS EMPLOYEE_STATUS FROM "ZTF_SPLIT_STRG"( :bup_emplstatus ));
ELSEIF :bup_emplstatus = '*' then
cte_result_2=
SELECT * FROM :cte_result_1;
END IF ;
RETURN
SELECT *
FROM :cte_result_2;
ENDMETHOD. "READ_HR001

METHOD READ_HR105
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0105
  ZSEZ_TF_PARAMS
  .
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => '*', P_COMP_CODE => :p_comp_code );

RETURN
SELECT
HR105.MANDT
,HR105.PERNR AS EMPLOYEE
,HR002.COMP_CODE
,HR002.LEGAL_ENTITY
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR105.USRID
,HR105.USRID_LONG
,HR105.zz_erp_key_0105_04 as PARTENA_ERP_KEY


,HR105.ENDDA AS DATETO
,HR105.BEGDA AS DATEFROM
,HR105.SUBTY
,HR105.OBJPS
,HR105.SEQNR
,'0105' AS INFTY
,HR105.aedtm AS CH_ON
,HR105.UNAME
FROM PA0105 AS HR105
INNER JOIN :cte_hr002 AS HR002 ON HR002.EMPLOYEE = HR105.PERNR
AND HR002.MANDT = HR105.MANDT
AND HR105.BEGDA <= :p_keydate AND HR105.ENDDA >= :p_keydate
WHERE HR105.MANDT = session_context('CLIENT') AND HR105.subty = :p_subty
;

ENDMETHOD. "READ_HR105

METHOD READ_HR105_GDFS
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR105 ZSEZ_TF_PARAMS
  .
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_union_GDFS_0001=
SELECT
MANDT
,EMPLOYEE
,COMP_CODE
,LEGAL_ENTITY
,EMPLOYEE_STATUS
,EMPLOYEE_GROUP
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,CASE when SUBSTRING(USRID,1,2) LIKE_REGEXPR '([0-9][0-9])' THEN '' ELSE USRID END AS USRID
,USRID_LONG
,DATETO
,DATEFROM
,SUBTY
,OBJPS
,SEQNR
,INFTY
,CH_ON
,UNAME
FROM "ZSEZ_TF_HR105"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code, P_SUBTY => '0001')
UNION
SELECT
MANDT
,EMPLOYEE
,COMP_CODE
,LEGAL_ENTITY
,EMPLOYEE_STATUS
,EMPLOYEE_GROUP
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,CASE when SUBSTRING(USRID,1,2) LIKE_REGEXPR '([0-9][0-9])' THEN '' ELSE USRID END AS USRID
,USRID_LONG
,DATETO
,DATEFROM
,SUBTY
,OBJPS
,SEQNR
,INFTY
,CH_ON
,UNAME
FROM "ZSEZ_TF_HR105"
( P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code, P_SUBTY => 'GDFS')
;
--max out to get unique record per employee
RETURN
SELECT
MANDT
,EMPLOYEE
,COMP_CODE
,LEGAL_ENTITY
,MAX(EMPLOYEE_STATUS) AS EMPLOYEE_STATUS
,MAX(EMPLOYEE_GROUP) AS EMPLOYEE_GROUP
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,USRID
,USRID_LONG
,MAX(DATETO) AS DATETO
,MAX(DATEFROM) AS DATEFROM
,'GDFS' AS SUBTY
,'' AS OBJPS
,MAX(SEQNR) AS SEQNR
,INFTY
,MAX(CH_ON) AS CH_ON
,MAX(UNAME) AS UNAME
FROM :cte_union_GDFS_0001
WHERE ASCII(SUBSTRING(USRID,1,1)) <> 0
GROUP BY
MANDT
,EMPLOYEE
,COMP_CODE
,LEGAL_ENTITY
--,EMPLOYEE_STATUS
,LEGAL_FIRST_NAME
,LEGAL_LAST_NAME
,USRID
,USRID_LONG
,INFTY
;
ENDMETHOD. "READ_HR105_GDFS

METHOD READ_HR000
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0000 ZSEZ_TF_PARAMS.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplstatus from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplstatus from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :p_emplstatus = '*' and :p_emplgrp = '*' and  :p_comp_code = '*'
then
cte_temp=
SELECT
HR000.mandt
,HR000.pernr AS EMPLOYEE
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR000.STAT3 AS PAYMNTSTATUS
,HR000.MASSG AS ACTIONREAS
,HR000.massn AS ACTIONTYPE
,HR002.ACTIONREAS_DESC
,HR002.ACTIONTYPE_DESC
,HR000.ENDDA AS DATETO
,HR000.BEGDA AS DATEFROM
,HR000.SUBTY
,HR000.OBJPS
,HR000.SEQNR
,'0000' AS INFTY
,HR000.aedtm AS CH_ON
,HR000.UNAME

FROM PA0000 as HR000
LEFT OUTER JOIN :cte_hr002 as HR002
ON HR000.MANDT = HR002.MANDT AND HR000.pernr = HR002.EMPLOYEE
AND HR000.BEGDA <= :p_keydate AND HR000.ENDDA >= :p_keydate
AND HR000.MANDT = session_context('CLIENT');
else
cte_temp=
SELECT
HR000.mandt
,HR000.pernr AS EMPLOYEE
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR000.STAT3 AS PAYMNTSTATUS
,HR000.MASSG AS ACTIONREAS
,HR000.massn AS ACTIONTYPE
,HR002.ACTIONREAS_DESC
,HR002.ACTIONTYPE_DESC
,HR000.ENDDA AS DATETO
,HR000.BEGDA AS DATEFROM
,HR000.SUBTY
,HR000.OBJPS
,HR000.SEQNR
,'0000' AS INFTY
,HR000.aedtm AS CH_ON
,HR000.UNAME

FROM PA0000 as HR000
INNER JOIN :cte_hr002 as HR002
ON HR000.MANDT = HR002.MANDT AND HR000.pernr = HR002.EMPLOYEE
WHERE HR000.BEGDA <= :p_keydate AND HR000.ENDDA >= :p_keydate
AND HR000.MANDT = session_context('CLIENT');

end if;

RETURN
SELECT * FROM :cte_temp ORDER BY 2;

ENDMETHOD. "READ_HR000

METHOD READ_HR041
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0041 ZSEZ_TF_PARAMS.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :p_emplstatus = '*' and :p_emplgrp = '*' and  :p_comp_code = '*'
then
cte_temp=
SELECT
HR041.mandt
,HR041.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR041.DAT01
,HR041.DAT02
,HR041.ZZJUBILEE
,HR041.ZZPENSION
,HR041.ZZSIMUL
,HR041.ENDDA AS DATETO
,HR041.BEGDA AS DATEFROM
,HR041.SUBTY
,HR041.OBJPS
,HR041.SEQNR
,'0041' AS INFTY
,HR041.aedtm AS CH_ON
,HR041.UNAME

FROM PA0041 as HR041
LEFT OUTER JOIN :cte_hr002 as HR002
ON HR041.MANDT = HR002.MANDT AND HR041.pernr = HR002.EMPLOYEE
AND HR041.BEGDA <= :p_keydate AND HR041.ENDDA >= :p_keydate
AND HR041.MANDT = session_context('CLIENT');
else
cte_temp=
SELECT
HR041.mandt
,HR041.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR041.DAT01
,HR041.DAT02
,HR041.ZZJUBILEE
,HR041.ZZPENSION
,HR041.ZZSIMUL
,HR041.ENDDA AS DATETO
,HR041.BEGDA AS DATEFROM
,HR041.SUBTY
,HR041.OBJPS
,HR041.SEQNR
,'0041' AS INFTY
,HR041.aedtm AS CH_ON
,HR041.UNAME

FROM PA0041 as HR041
INNER JOIN :cte_hr002 as HR002
ON HR041.MANDT = HR002.MANDT AND HR041.pernr = HR002.EMPLOYEE
AND HR041.MANDT = session_context('CLIENT')
WHERE HR041.BEGDA <= :p_keydate AND HR041.ENDDA >= :p_keydate
;
end if;

RETURN
SELECT * FROM :cte_temp ORDER BY 2;

ENDMETHOD. "READ_HR041

METHOD READ_HR016
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0016 T547S T547V ZSEZ_TF_PARAMS.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_cntrctype=
SELECT
V.MANDT,
T.CTTYP AS CNTRCTTYPE,
T.CTTXT AS CNTRCTTYPE_DESC,
V.CTLTD AS IS_FIXED_TERM
FROM T547S AS T
INNER JOIN T547V AS V ON T.MANDT = V.MANDT AND T.CTTYP = V.CTTYP AND T.SPRSL = 'E'
AND T.MANDT = session_context('CLIENT');

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :p_emplstatus = '*' and :p_emplgrp = '*' and  :p_comp_code = '*'
then
cte_temp=
SELECT
HR016.mandt
,HR016.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR016.EINDT AS ENTRYDATE
,CASE WHEN KONDT IS NULL  OR KONDT = '00000000' THEN EINDT ELSE KONDT END AS KONDT
,HR016.CTTYP AS CNTRCTTYPE
,C.CNTRCTTYPE_DESC
,C.IS_FIXED_TERM
,HR016.CTEDT
,HR016.PERSG
,HR016.PERSK
,HR016.WRKPL
,HR016.CTBEG

,HR016.ENDDA AS DATETO
,HR016.BEGDA AS DATEFROM
,HR016.SUBTY
,HR016.OBJPS
,HR016.SEQNR
,'0016' AS INFTY
,HR016.aedtm AS CH_ON
,HR016.UNAME

FROM PA0016 as HR016
LEFT OUTER JOIN :cte_hr002 as HR002
ON HR016.MANDT = HR002.MANDT AND HR016.pernr = HR002.EMPLOYEE
AND HR016.BEGDA <= :p_keydate AND HR016.ENDDA >= :p_keydate
INNER JOIN :cte_cntrctype AS C ON C.MANDT = HR002.MANDT
AND C.CNTRCTTYPE = HR016.CTTYP
WHERE HR016.MANDT = session_context('CLIENT')
;
else
cte_temp=
SELECT
HR016.mandt
,HR016.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR016.EINDT AS ENTRYDATE
,CASE WHEN KONDT IS NULL  OR KONDT = '00000000' THEN EINDT ELSE KONDT END AS KONDT
,HR016.CTTYP AS CNTRCTTYPE
,C.CNTRCTTYPE_DESC
,C.IS_FIXED_TERM
,HR016.CTEDT
,HR016.PERSG
,HR016.PERSK
,HR016.WRKPL
,HR016.CTBEG

,HR016.ENDDA AS DATETO
,HR016.BEGDA AS DATEFROM
,HR016.SUBTY
,HR016.OBJPS
,HR016.SEQNR
,'0016' AS INFTY
,HR016.aedtm AS CH_ON
,HR016.UNAME

FROM PA0016 as HR016
INNER JOIN :cte_hr002 as HR002
ON HR016.MANDT = HR002.MANDT AND HR016.pernr = HR002.EMPLOYEE
INNER JOIN :cte_cntrctype AS C ON C.MANDT = HR002.MANDT
AND C.CNTRCTTYPE = HR016.CTTYP
WHERE HR016.MANDT = session_context('CLIENT')
AND HR016.BEGDA <= :p_keydate AND HR016.ENDDA >= :p_keydate;

end if;

RETURN
SELECT * FROM :cte_temp ORDER BY 2;


ENDMETHOD. "READ_HR016

METHOD READ_HR007
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002  PA0007 ZSEZ_TF_PARAMS.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, '*', :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :p_emplstatus = '*' and :p_emplgrp = '*' and  :p_comp_code = '*'
then
cte_temp=
SELECT
HR007.mandt
,HR007.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR007.EMPCT
,HR007.MOSTD
,HR007.WOSTD
,HR007.ARBST
,HR007.WKWDY
,HR007.JRSTD
,HR007.TEILK
,HR007.MINTA
,HR007.MAXTA
,HR007.MINWO
,HR007.ZZ_FTE_CALCUL

,HR007.ENDDA AS DATETO
,HR007.BEGDA AS DATEFROM
,HR007.SUBTY
,HR007.OBJPS
,HR007.SEQNR
,'0007' AS INFTY
,HR007.aedtm AS CH_ON
,HR007.UNAME

FROM PA0007 as HR007
LEFT OUTER JOIN :cte_hr002 as HR002 ON HR007.MANDT = HR002.MANDT AND HR007.PERNR = HR002.EMPLOYEE
WHERE HR007.BEGDA <= :p_keydate AND HR007.ENDDA >= :p_keydate
AND HR007.MANDT = session_context('CLIENT')
;
else
cte_temp=
SELECT
HR007.mandt
,HR007.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR007.EMPCT
,HR007.MOSTD
,HR007.WOSTD
,HR007.ARBST
,HR007.WKWDY
,HR007.JRSTD
,HR007.TEILK
,HR007.MINTA
,HR007.MAXTA
,HR007.MINWO
,HR007.ZZ_FTE_CALCUL

,HR007.ENDDA AS DATETO
,HR007.BEGDA AS DATEFROM
,HR007.SUBTY
,HR007.OBJPS
,HR007.SEQNR
,'0007' AS INFTY
,HR007.aedtm AS CH_ON
,HR007.UNAME

FROM PA0007 as HR007
INNER JOIN :cte_hr002 as HR002 ON HR007.MANDT = HR002.MANDT AND HR007.pernr = HR002.EMPLOYEE
WHERE HR007.MANDT = session_context('CLIENT') AND HR007.BEGDA <= :p_keydate AND HR007.ENDDA >= :p_keydate;

end if;

RETURN
SELECT * FROM :cte_temp
ORDER BY 2;
ENDMETHOD. "READ_HR007

METHOD READ_HR032
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0032 ZSEZ_TF_PARAMS.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;


cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
cte_hr032=
SELECT *
FROM PA0032 as HR032
WHERE HR032.MANDT = session_context('CLIENT') AND HR032.BEGDA <= :p_keydate AND HR032.ENDDA >= :p_keydate;

if :bup_emplstatus = '*' and  :p_emplgrp = '*' and :bup_comp_code = '*'
then
cte_temp=
SELECT
HR032.mandt
,HR032.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR032.GEBNR AS BUILDING
,HR032.PNALT
,HR032.WAUSW
,HR032.PKWRG
,HR032.PKWWR
,HR032.KFZKZ
,HR032.WAERS
,HR032.ANLNR
,HR032.ZIMNR
,HR032.TEL01
,HR032.TEL02
,HR032.COM01
,HR032.NUM01
,HR032.ZBUIL
,HR032.ZOFFICE

,HR032.ENDDA AS DATETO
,HR032.BEGDA AS DATEFROM
,HR032.SUBTY
,HR032.OBJPS
,HR032.SEQNR
,'0032' AS INFTY
,HR032.aedtm AS CH_ON
,HR032.UNAME

FROM :cte_hr032 as HR032
LEFT OUTER JOIN :cte_hr002 as HR002 ON HR032.MANDT = HR002.MANDT AND HR032.pernr = HR002.EMPLOYEE;

else
cte_temp=
SELECT
HR032.mandt
,HR032.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR032.GEBNR AS BUILDING
,HR032.PNALT
,HR032.WAUSW
,HR032.PKWRG
,HR032.PKWWR
,HR032.KFZKZ
,HR032.WAERS
,HR032.ANLNR
,HR032.ZIMNR
,HR032.TEL01
,HR032.TEL02
,HR032.COM01
,HR032.NUM01
,HR032.ZBUIL
,HR032.ZOFFICE

,HR032.ENDDA AS DATETO
,HR032.BEGDA AS DATEFROM
,HR032.SUBTY
,HR032.OBJPS
,HR032.SEQNR
,'0032' AS INFTY
,HR032.aedtm AS CH_ON
,HR032.UNAME

FROM :cte_hr032 as HR032
INNER JOIN :cte_hr002 as HR002 ON HR032.MANDT = HR002.MANDT AND HR032.pernr = HR002.EMPLOYEE;

end if;

RETURN
SELECT * FROM :cte_temp
ORDER BY 2;
ENDMETHOD. "READ_HR032

METHOD READ_HR315
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0315 ZSEZ_TF_PARAMS.

  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :bup_emplstatus = '*' and :p_emplgrp = '*' and  :bup_comp_code = '*'
then
cte_temp=
SELECT
HR315.mandt
,HR315.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR315.KOSTL
,HR315.LSTAR
,HR315.PLSTA
,HR315.WERKS
,HR315.LIFNR
,HR315.EBELN
,HR315.EBELP
,HR315.LSTNR
,HR315.SPRZNR
,HR315.ACCNT
,HR315.ZZOVHLINE

,HR315.ENDDA AS DATETO
,HR315.BEGDA AS DATEFROM
,HR315.SUBTY
,HR315.OBJPS
,HR315.SEQNR
,'0315' AS INFTY
,HR315.aedtm AS CH_ON
,HR315.UNAME

FROM PA0315 as HR315
LEFT OUTER JOIN :cte_hr002 as HR002 ON HR315.MANDT = HR002.MANDT AND HR315.PERNR = HR002.EMPLOYEE
WHERE HR315.MANDT = session_context('CLIENT') AND HR315.BEGDA <= :p_keydate AND HR315.ENDDA >= :p_keydate;
else
cte_temp=
SELECT
HR315.mandt
,HR315.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR315.KOSTL
,HR315.LSTAR
,HR315.PLSTA
,HR315.WERKS
,HR315.LIFNR
,HR315.EBELN
,HR315.EBELP
,HR315.LSTNR
,HR315.SPRZNR
,HR315.ACCNT
,HR315.ZZOVHLINE

,HR315.ENDDA AS DATETO
,HR315.BEGDA AS DATEFROM
,HR315.SUBTY
,HR315.OBJPS
,HR315.SEQNR
,'0315' AS INFTY
,HR315.aedtm AS CH_ON
,HR315.UNAME

FROM PA0315 as HR315
INNER JOIN :cte_hr002 as HR002 ON HR315.MANDT = HR002.MANDT AND HR315.pernr = HR002.EMPLOYEE
WHERE HR315.MANDT = session_context('CLIENT') AND HR315.BEGDA <= :p_keydate AND HR315.ENDDA >= :p_keydate;

end if;

RETURN
SELECT * FROM :cte_temp
ORDER BY 2;
ENDMETHOD. "READ_HR315

METHOD READ_HR006
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0006 T005 T005T ZSEZ_TF_PARAMS ZTF_SPLIT_STRG.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
  DECLARE bup_anssa varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, :p_anssa);
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; p_anssa := ''; bup_emplstatus := ''; bup_comp_code := ''; bup_anssa := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_anssa into p_anssa from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;
SELECT lv_bup_anssa into bup_anssa from :cte_param;


cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :bup_emplstatus = '*' and :p_emplgrp = '*' and  :bup_comp_code = '*' and :bup_anssa = '*'
then
cte_temp=
SELECT DISTINCT
HR006.mandt
,HR006.LAND1 AS COUNTRY_SAP
,HR006.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME
,HR006.ANSSA AS  ADDRESS_TYPE
,CASE HR006.ANSSA
    WHEN '1' THEN 'Home Address'
    WHEN '2' THEN 'Temporary Residence'
    WHEN '3' THEN 'Home Address SAP'
    WHEN '4' THEN 'Emergency Address'
    WHEN '5' THEN 'Mailing Address'
    WHEN '7' THEN '?'
    ELSE 'Undocumented'
    END AS  ADDRESS_TYPE_DESC
,HR006.STRAS AS STREET
,HR006.LOCAT
,HR006.HSNMR
,HR006.POSTA AS APARTMENT
,HR006.PSTLZ AS POSTAL_CD
,HR006.ORT01 AS CITY

,T005T.LANDX50 AS COUNTRY
,T005.INTCA3 AS COUNTRY_ISO
,HR006.ENTKM AS DISTANCE
,'KM' AS MEDST
,HR006.TELNR AS TEL_NUMBER

,HR006.NAME2
,HR006.WKWNG
,HR006.BUSRT
,HR006.STATE
,HR006.ORT02
,HR006.ENTK2 AS DISTANCE2
,HR006.ADR03
,HR006.ADR04
,HR006.BLDNG
,HR006.FLOOR
,HR006.ZZEMAIL AS EMAIL

,HR006.ENDDA AS DATETO
,HR006.BEGDA AS DATEFROM
,HR006.SUBTY
,HR006.OBJPS
,HR006.SEQNR
,'0006' AS INFTY
,HR006.aedtm AS CH_ON
,HR006.UNAME

FROM PA0006 as HR006
LEFT OUTER JOIN :cte_hr002 as HR002 ON HR006.MANDT = HR002.MANDT AND HR006.PERNR = HR002.EMPLOYEE

LEFT OUTER JOIN T005 ON T005.MANDT = HR006.MANDT AND HR006.LAND1 = T005.LAND1
LEFT OUTER JOIN T005T ON T005T.MANDT = HR006.MANDT AND HR006.LAND1 = T005T.LAND1 AND T005T.spras = 'E'
WHERE HR006.MANDT = session_context('CLIENT')
AND HR006.BEGDA <= :p_keydate AND HR006.ENDDA >= :p_keydate
;
-- note for where above SUBTY = ANSSA
else
cte_temp=
SELECT DISTINCT
HR006.mandt
,HR006.LAND1 AS COUNTRY_SAP
,HR006.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR006.ANSSA AS  ADDRESS_TYPE
,CASE HR006.ANSSA
    WHEN '1' THEN 'Home Address'
    WHEN '2' THEN 'Temporary Residence'
    WHEN '3' THEN 'Home Address SAP'
    WHEN '4' THEN 'Emergency Address'
    WHEN '5' THEN 'Mailing Address'
    WHEN '7' THEN '?'
    ELSE 'Undocumented'
    END AS  ADDRESS_TYPE_DESC
,HR006.STRAS AS STREET
,HR006.LOCAT
,HR006.HSNMR
,HR006.POSTA AS APARTMENT
,HR006.PSTLZ AS POSTAL_CD
,HR006.ORT01 AS CITY

,T005T.LANDX50 AS COUNTRY
,T005.INTCA3 AS COUNTRY_ISO
,HR006.ENTKM AS DISTANCE
,'KM' AS MEDST
,HR006.TELNR AS TEL_NUMBER

,HR006.NAME2
,HR006.WKWNG
,HR006.BUSRT
,HR006.STATE
,HR006.ORT02
,HR006.ENTK2 AS DISTANCE2
,HR006.ADR03
,HR006.ADR04
,HR006.BLDNG
,HR006.FLOOR
,HR006.ZZEMAIL AS EMAIL

,HR006.ENDDA AS DATETO
,HR006.BEGDA AS DATEFROM
,HR006.SUBTY
,HR006.OBJPS
,HR006.SEQNR
,'0006' AS INFTY
,HR006.aedtm AS CH_ON
,HR006.UNAME

FROM PA0006 as HR006
INNER JOIN :cte_hr002 as HR002 ON HR006.MANDT = HR002.MANDT AND HR006.PERNR = HR002.EMPLOYEE
AND HR006.MANDT = session_context('CLIENT')
AND HR006.BEGDA <= :p_keydate AND HR006.ENDDA >= :p_keydate
LEFT OUTER JOIN T005 ON T005.MANDT = HR006.MANDT AND HR006.LAND1 = T005.LAND1
LEFT OUTER JOIN T005T ON T005T.MANDT = HR006.MANDT AND HR006.LAND1 = T005T.LAND1 AND T005T.spras = 'E'
WHERE HR006.MANDT = session_context('CLIENT')
AND HR006.BEGDA <= :p_keydate AND HR006.ENDDA >= :p_keydate AND

( HR006.ANSSA IN
(SELECT distinct TO_VARCHAR(BASE_MEMBER) AS ANSSA FROM "ZTF_SPLIT_STRG"( :p_anssa ))
and HR006.SUBTY IN
(SELECT distinct TO_VARCHAR(BASE_MEMBER) AS ANSSA FROM "ZTF_SPLIT_STRG"( :p_anssa ))
)
;
end if;

RETURN
SELECT * FROM :cte_temp
ORDER BY 2;
ENDMETHOD. "READ_HR006

METHOD READ_HR9351
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA9351 ZSEZ_TF_PARAMS.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;

cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :bup_emplstatus = '*' and :p_emplgrp = '*' and  :bup_comp_code = '*'
then
cte_temp=
SELECT
HR9351.mandt
,HR9351.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,LAEDC AS PRINTING_LANGUAGE
,ATP1A
,ATP2A
,ATP3A
,DE03C
,EDVAF
,ACBRN
,CDEC4
,T171C
,ATSCE
,DBATD
,FNATD
,TYATC
,JRATB
,HSEMB
,H9ATC
,ATANF
,ATTRN
,MTATV
,MTSOV
,SPEPV


,HR9351.ENDDA AS DATETO
,HR9351.BEGDA AS DATEFROM
,HR9351.SUBTY
,HR9351.OBJPS
,HR9351.SEQNR
,'9351' AS INFTY
,HR9351.aedtm AS CH_ON
,HR9351.UNAME

FROM PA9351 as HR9351
LEFT OUTER JOIN :cte_hr002 as HR002
ON HR9351.MANDT = HR002.MANDT AND HR9351.pernr = HR002.EMPLOYEE
WHERE HR9351.BEGDA <= :p_keydate AND HR9351.ENDDA >= :p_keydate
AND HR9351.MANDT = session_context('CLIENT');
else
cte_temp=
SELECT
HR9351.mandt
,HR9351.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,LAEDC AS PRINTING_LANGUAGE
,ATP1A
,ATP2A
,ATP3A
,DE03C
,EDVAF
,ACBRN
,CDEC4
,T171C
,ATSCE
,DBATD
,FNATD
,TYATC
,JRATB
,HSEMB
,H9ATC
,ATANF
,ATTRN
,MTATV
,MTSOV
,SPEPV


,HR9351.ENDDA AS DATETO
,HR9351.BEGDA AS DATEFROM
,HR9351.SUBTY
,HR9351.OBJPS
,HR9351.SEQNR
,'9351' AS INFTY
,HR9351.aedtm AS CH_ON
,HR9351.UNAME

FROM PA9351 as HR9351
INNER JOIN :cte_hr002 as HR002
ON HR9351.MANDT = HR002.MANDT AND HR9351.pernr = HR002.EMPLOYEE
WHERE HR9351.MANDT = session_context('CLIENT')
AND HR9351.BEGDA <= :p_keydate AND HR9351.ENDDA >= :p_keydate
;
end if;

RETURN
SELECT * FROM :cte_temp ORDER BY 2;

ENDMETHOD. "READ_HR9351

METHOD READ_HR008
BY DATABASE FUNCTION FOR HDB
  LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING ZSEZ_TF_HR002 PA0008 ZSEZ_TF_PARAMS.
  DECLARE bup_emplstatus varchar (  1333 );
  DECLARE bup_emplgrp varchar (  1333 );
  DECLARE bup_comp_code varchar (  1333 );
cte_param=
SELECT *
FROM "ZSEZ_TF_PARAMS"( :p_keydate, :p_emplstatus, :p_emplgrp, :p_comp_code, '*');
p_keydate := ''; p_emplstatus := ''; p_comp_code := ''; bup_emplstatus := ''; bup_comp_code := '';
SELECT lv_keydate into p_keydate from :cte_param;
SELECT lv_emplstatus into p_emplstatus from :cte_param;
SELECT lv_emplgrp into p_emplgrp from :cte_param;
SELECT lv_comp_code into p_comp_code from :cte_param;
SELECT lv_bup_emplstatus into bup_emplstatus from :cte_param;
SELECT lv_bup_emplgrp into bup_emplgrp from :cte_param;
SELECT lv_bup_comp_code into bup_comp_code from :cte_param;


cte_hr002=
SELECT *
FROM "ZSEZ_TF_HR002"
(P_KEYDATE => :p_keydate , P_EMPLSTATUS => :p_emplstatus, P_EMPLGRP => :p_emplgrp, P_COMP_CODE => :p_comp_code )
;
if :bup_emplstatus = '*' and p_emplgrp = '*' and  :bup_comp_code = '*'
then
cte_temp=
SELECT
HR008.mandt
,HR008.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR008.TRFAR AS PAYSCALETY
,HR008.TRFGB AS PAYSCALEAR
,HR008.TRFGR AS PAYSCALEGR
,HR008.TRFST AS PAYSCALELV
,HR008.STVOR
,HR008.WAERS AS CURRENCY
,HR008.BSGRD AS PAYPCT
,TO_VARCHAR(CEIL(HR008.BSGRD),'') AS PAYPCT_CHA
,HR008.VGLSV
,HR008.ANSAL AS ANSALARY
,HR008.PREAS
,HR008.BET01

,HR008.ENDDA AS DATETO
,HR008.BEGDA AS DATEFROM
,HR008.SUBTY
,HR008.OBJPS
,HR008.SEQNR
,'0008' AS INFTY
,HR008.aedtm AS CH_ON
,HR008.UNAME

FROM PA0008 as HR008
LEFT OUTER JOIN :cte_hr002 as HR002 ON HR008.MANDT = HR002.MANDT AND HR008.PERNR = HR002.EMPLOYEE
WHERE HR008.MANDT = session_context('CLIENT') AND HR008.BEGDA <= :p_keydate AND HR008.ENDDA >= :p_keydate;
else
cte_temp=
SELECT
HR008.mandt
,HR008.pernr AS EMPLOYEE
,HR002.COMP_CODE
,HR002.EMPLOYEE_STATUS
,HR002.EMPLOYEE_GROUP
,HR002.LEGAL_FIRST_NAME
,HR002.LEGAL_LAST_NAME

,HR008.TRFAR AS PAYSCALETY
,HR008.TRFGB AS PAYSCALEAR
,HR008.TRFGR AS PAYSCALEGR
,HR008.TRFST AS PAYSCALELV
,HR008.STVOR
,HR008.WAERS AS CURRENCY
,HR008.BSGRD AS PAYPCT
,TO_VARCHAR(CEIL(HR008.BSGRD),'') AS PAYPCT_CHA
,HR008.VGLSV
,HR008.ANSAL AS ANSALARY
,HR008.PREAS
,HR008.BET01

,HR008.ENDDA AS DATETO
,HR008.BEGDA AS DATEFROM
,HR008.SUBTY
,HR008.OBJPS
,HR008.SEQNR
,'0008' AS INFTY
,HR008.aedtm AS CH_ON
,HR008.UNAME

FROM PA0008 as HR008
INNER JOIN :cte_hr002 as HR002 ON HR008.MANDT = HR002.MANDT AND HR008.pernr = HR002.EMPLOYEE
WHERE HR008.BEGDA <= :p_keydate AND HR008.ENDDA >= :p_keydate AND HR008.MANDT = session_context('CLIENT');

end if;

RETURN
SELECT * FROM :cte_temp
ORDER BY 2;
ENDMETHOD. "READ_HR008
ENDCLASS.
